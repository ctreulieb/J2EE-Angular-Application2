package case2ejbs;
import dtos.VendorEJBDTO;
import java.util.Set;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import models.VendorsModel;

/**
 * VendorFacadeBean.java
 *
 * Created: 9-10-2014 3:03 PM
 *
 * @author: Evan.
 *          Stateless Session EJB that acts as a facade to the Vendor
 *          model. 
 *          Revisions: 
 * @version 1.0 
 * 09/10/14:
 *
 */
@Stateless
@LocalBean
public class VendorBeanFacade {

    @PersistenceContext
    private EntityManager em;

    /**
     *
     * @param ven vendor DTO of all new vendor information
     * @return int representing the number of rows added. Note vendorno is an
     * autogenerated number.
     */
    public int addVendor(VendorEJBDTO ven) {

        VendorsModel vm;
        int retVal = -1;

        try {
            vm = new VendorsModel(null, ven.getAddress1(), ven.getCity(),
                    ven.getProvince(), ven.getPostalcode(),
                    ven.getPhone(), ven.getVendortype(), ven.getName(),
                    ven.getEmail());
            em.persist(vm);
            em.flush();
            retVal = vm.getVendorno();
        } catch (ConstraintViolationException v) { 
            Set<ConstraintViolation<?>> coll = v.getConstraintViolations(); 
            for (ConstraintViolation s : coll) {
                System.out.println(s.getPropertyPath() + " " + s.getMessage());
            }
        } catch (Exception e) {        
            System.out.println(e.getMessage());
        }
        return retVal;

    }
}